[gd_resource type="VisualShader" load_steps=7 format=2]

[sub_resource type="VisualShaderNodeVectorFunc" id=1]
function = 5

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=3]

[sub_resource type="VisualShaderNodeVectorCompose" id=4]
default_input_values = [ 0, 0.0, 1, 1.0, 2, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=5]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarUniform" id=6]
uniform_name = "Brightness"

[resource]
code = "shader_type canvas_item;
uniform float Brightness;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0;
	n_out3p0 = vec3(UV,0.0);

// VectorDecompose:4
	float n_out4p0;
	float n_out4p1;
	float n_out4p2;
	n_out4p0 = n_out3p0.x;
	n_out4p1 = n_out3p0.y;
	n_out4p2 = n_out3p0.z;

// ScalarOp:6
	float n_in6p0 = 1.00000;
	float n_out6p0;
	n_out6p0 = n_in6p0 - n_out4p1;

// ScalarUniform:7
	float n_out7p0;
	n_out7p0 = Brightness;

// VectorCompose:5
	vec3 n_out5p0;
	n_out5p0 = vec3( n_out4p0 , n_out6p0 , n_out7p0 );

// VectorFunc:2
	vec3 n_out2p0;
	{
		vec3 c = n_out5p0;
		vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
		vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
		n_out2p0=c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
	}

// Output:0
	COLOR.rgb = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -187, 37 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1000, 160 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 720, 140 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -160, 140 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 0, 140 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 460, 140 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 260, 200 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( 260, 340 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 3, 0, 4, 0, 4, 0, 5, 0, 4, 1, 6, 1, 6, 0, 5, 1, 5, 0, 2, 0, 7, 0, 5, 2 )
